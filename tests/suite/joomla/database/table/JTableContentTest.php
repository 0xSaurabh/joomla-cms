<?php
/**
 * @package     Joomla.UnitTest
 * @subpackage  Database
 *
 * @copyright   Copyright (C) 2005 - 2011 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE
 */

require_once JPATH_PLATFORM . '/joomla/database/table/content.php';

/**
 * Test class for JTableContent.
 * Generated by PHPUnit on 2011-12-06 at 03:00:12.
 */
class JTableContentTest extends JoomlaDatabaseTestCase
{
	/**
	 * @var  JTableCategory
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		parent::setUp();

		// Get the mocks
		$this->saveFactoryState();

		JFactory::$application = $this->getMockApplication();

		$this->object = new JTableContent(self::$dbo);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		$this->restoreFactoryState();

		parent::tearDown();
	}

	/**
	 * Gets the data set to be loaded into the database during setup
	 *
	 * @return  CSV database tables
	 *
	 * @since   11.4
	 */
	protected function getDataSet()
	{
		$dataSet = new PHPUnit_Extensions_Database_DataSet_CsvDataSet(',', "'", '\\');

		$dataSet->addTable('jos_assets', dirname(__DIR__) . '/stubs/jos_assets.csv');
		$dataSet->addTable('jos_categories', dirname(__DIR__) . '/stubs/jos_categories.csv');
		$dataSet->addTable('jos_content', dirname(__DIR__) . '/stubs/jos_content.csv');

		return $dataSet;
	}

	/**
	 * @covers JTableContent::bind
	 * @todo   Implement testBind().
	 */
	public function testBind()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * Tests JTableContent::check
	 *
	 * @return  void
	 *
	 * @since   11.4
	 */
	public function testCheck()
	{
		$table = $this->object;

		$this->assertThat(
			$table->check(),
			$this->isFalse(),
			'Line: '.__LINE__.' Checking an empty table should fail.'
		);

		$table->title = 'Test Title';
		$this->assertThat(
			$table->check(),
			$this->isFalse(),
			'Line: '.__LINE__.' Checking the table with just the title should fail.'
		);

		$this->assertThat(
			$table->alias,
			$this->equalTo('test-title'),
			'Line: '.__LINE__.' An empty alias should assume the value of the title.'
		);
	}

	/**
	 * @covers JTableContent::store
	 * @todo   Implement testStore().
	 */
	public function testStore()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers JTableContent::publish
	 * @todo   Implement testPublish().
	 */
	public function testPublish()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @covers JTableContent::toXml
	 * @todo   Implement testToXML().
	 */
	public function testToXML()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}
}
