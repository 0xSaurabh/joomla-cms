<?php
/**
 * @package     Joomla.UnitTest
 * @subpackage  HTML
 *
 * @copyright   Copyright (C) 2005 - 2011 Open Source Matters, Inc. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE
 */

jimport('joomla.html.grid');

class JGridInspector extends JGrid
{
	function get($name)
	{
		return $this->$name;
	}
}

/**
 * Test class for JGrid.
 * Generated by PHPUnit on 2009-10-27 at 15:38:18.
 */
class JGridTest extends PHPUnit_Framework_TestCase
{	
	public function test__construct()
	{
		$table = new JGrid();
		$this->assertThat(
			($table instanceof JGrid),
			$this->isTrue()
		);
		
		$options = array('class' => 'center', 'width' => '50%');
		$table = new JGrid($options);
		$this->assertThat(
			$table->getTableOptions(),
			$this->equalTo($options)
		);
	}

	public function test__toString()
	{
		$table = new JGrid();
		$table->addColumn('testCol1');
		$table->addRow(array('class' => 'test1'));
		$table->addRowCell('testCol1', 'testcontent1', array('class' => '1'));
		
		$this->assertThat(
			(string) $table,
			$this->equalTo($table->toString())
		);
	}
	
	public function testSetTableOptions()
	{
		$options = array('class' => 'center', 'width' => '50%');
		$table = new JGrid();
		$table->setTableOptions($options);
		$this->assertThat(
			$table->getTableOptions(),
			$this->equalTo($options)
		);
	}

	public function testGetTableOptions()
	{
		$options = array('class' => 'center', 'width' => '50%');
		$table = new JGrid();
		$table->setTableOptions($options);
		$this->assertThat(
			$table->getTableOptions(),
			$this->equalTo($options)
		);
	}

	public function testAddColumn()
	{
		$table = new JGrid();
		$table->addColumn('test1');
		$this->assertThat(
			$table->getColumns(),
			$this->equalTo(array('test1'))
		);
	}

	public function testGetColumns()
	{
		$table = new JGrid();
		$table->addColumn('test1');
		$this->assertThat(
			$table->getColumns(),
			$this->equalTo(array('test1'))
		);
	}

	public function testDeleteColumn()
	{
		$table = new JGrid();
		$table->addColumn('test1');
		$table->addColumn('test2');
		$table->addColumn('test3');
		$this->assertThat(
			$table->getColumns(),
			$this->equalTo(array('test1', 'test2', 'test3'))
		);
		$table->deleteColumn('test2');
		$this->assertThat(
			$table->getColumns(),
			$this->equalTo(array('test1', 'test3'))
		);
	}

	public function testSetColumns()
	{
		$table = new JGrid();
		$table->addColumn('test1');
		$table->addColumn('test2');
		$table->addColumn('test3');
		$this->assertThat(
			$table->getColumns(),
			$this->equalTo(array('test1', 'test2', 'test3'))
		);
		$array = array('test1', 'test3');
		$table->setColumns($array);
		$this->assertThat(
			$table->getColumns(),
			$this->equalTo(array('test1', 'test3'))
		);
		
		$array = array('test3', 'test1');
		$table->setColumns($array);
		$this->assertThat(
			$table->getColumns(),
			$this->equalTo(array('test3', 'test1'))
		);
	}

	public function testAddRow()
	{
		$table = new JGridInspector();
		$table->addRow();
		$this->assertThat(
			$table->get('rows'),
			$this->equalTo(array(0 => array('_row' => array())))
		);
		$this->assertThat(
			$table->getActiveRow(),
			$this->equalTo(0)
		);
		$table->addRow();
		$this->assertThat(
			$table->get('rows'),
			$this->equalTo(array(0 => array('_row' => array()), 1 => array('_row' => array())))
		);
		$this->assertThat(
			$table->getActiveRow(),
			$this->equalTo(1)
		);
	}

	public function testSetActiveRow()
	{
		$table = new JGridInspector();
		$table->addRow(array('class' => 'test1'));
		$table->addRow(array('class' => 'test2'));
		$table->addRow(array('class' => 'test3'));
		$this->assertThat(
			$table->getActiveRow(),
			$this->equalTo(2)
		);
		$table->setActiveRow(1);
		$this->assertThat(
			$table->getActiveRow(),
			$this->equalTo(1)
		);
	}
	
	public function testGetActiveRow()
	{
		$table = new JGridInspector();
		$table->addRow(array('class' => 'test1'));
		$table->addRow(array('class' => 'test2'));
		$table->addRow(array('class' => 'test3'));
		$this->assertThat(
			$table->getActiveRow(),
			$this->equalTo(2)
		);
		$table->setActiveRow(1);
		$this->assertThat(
			$table->getActiveRow(),
			$this->equalTo(1)
		);
	}

	public function testAddRowCell()
	{
		$table = new JGridInspector();
		$table->addColumn('testCol1');
		$table->addColumn('testCol2');
		$table->addColumn('testCol3');
		$table->addRow(array('class' => 'test1'));
		$table->addRowCell('testCol1', 'testcontent1', array('class' => '1'));
		$table->addRow(array('class' => 'test2'));
		$table->addRowCell('testCol2', 'testcontent2');
		$table->addRow(array('class' => 'test3'));
		$table->addRowCell('testCol3', 'testcontent3');
		$assertion = new stdClass();
		$assertion->options = array();
		$assertion->content = 'testcontent3';
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test3'), 'testCol3' => $assertion))
		);
		$table->setActiveRow(1);
		$assertion->content = 'testcontent2';
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test2'), 'testCol2' => $assertion))
		);
		$table->setActiveRow(0);
		$assertion->content = 'testcontent1';
		$assertion->options = array('class' => '1');
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test1'), 'testCol1' => $assertion))
		);
		
		//Test replacing existing content
		$table->addRowCell('testCol1', 'testcontent4', array('test' => 'difcontent'));
		$assertion->content = 'testcontent4';
		$assertion->options = array('test' => 'difcontent');
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test1'), 'testCol1' => $assertion))
		);
		
		//Test appending content
		$table->addRowCell('testCol1', ' appendedcontent', array('class' => '1'), false);
		$assertion->content = 'testcontent4 appendedcontent';
		$assertion->options = array('test' => 'difcontent', 'class' => '1');
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test1'), 'testCol1' => $assertion))
		);
		
		//Test adding another cell
		$table->addRowCell('testCol2', 'Col2content');
		$assertion2 = new stdClass();
		$assertion2->content = 'Col2content';
		$assertion2->options = array();
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test1'), 'testCol1' => $assertion, 'testCol2' => $assertion2))
		);
	}

	public function testGetRow()
	{
		$table = new JGrid();
		$table->addColumn('testCol1');
		$table->addRow(array('class' => 'test1'));
		
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test1')))
		);
	}

	public function testGetRows()
	{
		$table = new JGridInspector();
		$table->addColumn('testCol1');
		$table->addRow(array('class' => 'test1'));
		$table->addRowCell('testCol1', 'testcontent1', array('class' => '1'));
		$assertion = new stdClass();
		$assertion->options = array('class' => '1');
		$assertion->content = 'testcontent1';
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array('class' => 'test1'), 'testCol1' => $assertion))
		);
	}

	public function testDeleteRow()
	{
		$table = new JGrid();
		$table->addColumn('testCol1');
		$table->addRow(array('class' => 'test1'));
		$table->addRowCell('testCol1', 'testcontent1', array('class' => '1'));
		$table->addRow();
		$assertion = new stdClass();
		$assertion->options = array('class' => '1');
		$assertion->content = 'testcontent1';
		$this->assertThat(
			$table->getRow(0),
			$this->equalTo(array('_row' => array('class' => 'test1'), 'testCol1' => $assertion))
		);
		$table->deleteRow(0);
		$this->assertThat(
			$table->getRow(),
			$this->equalTo(array('_row' => array()))
		);
	}

	public function testToString()
	{
		$table = new JGrid();
		$table->addColumn('testCol1');
		$table->addRow(array('class' => 'test1'));
		$table->addRowCell('testCol1', 'testcontent1', array('class' => '1'));
		$this->assertThat(
			$table->toString(),
			$this->equalTo("<table><tbody>\n\t<tr>\n\t\t<td class=\"1\">testcontent1</td>\n\t</tr>\n</tbody></table>")
		);
	}
}