<?php
/**
 * @package	    Joomla.UnitTest
 * @subpackage  com_finder
 *
 * @copyright   Copyright (C) 2005 - 2011 Open Source Matters, Inc. All rights reserved.
 * @license	    GNU General Public License version 2 or later; see LICENSE
 */

require_once JPATH_ADMINISTRATOR . '/components/com_finder/helpers/indexer/adapter.php';
include_once __DIR__ . '/stubs/FinderIndexerAdapterInspector.php';

/**
 * Test class for FinderIndexerAdapter.
 * Generated by PHPUnit on 2011-10-20 at 22:33:32.
 */
class FinderIndexerAdapterTest extends JoomlaDatabaseTestCase
{
	/**
	 * @var FinderIndexerAdapterInspector
	 */
	protected $inspector;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		parent::setUp();

		// Get a new FinderIndexerAdapterInspector instance.
		$dispatcher = JDispatcher::getInstance();
		$config = array(
			'type' => 'finder',
			'name' => 'content',
			'params' => '{}'
		);
		$this->inspector = new FinderIndexerAdapterInspector($dispatcher, $config);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		parent::tearDown();
	}

	/**
	 * Gets the data set to be loaded into the database during setup
	 *
	 * @return  xml dataset
	 *
	 * @since   2.5
	 */
	protected function getDataSet()
	{
		return $this->createXMLDataSet(JPATH_TESTS . '/includes/testfiles/FinderDBTest.xml');
	}

	/**
	 * Test the change method.
	 *
	 * @return  void
	 *
	 * @since   2.5
	 */
	public function testChange()
	{
		$this->assertThat(
			$this->inspector->change('1', 'language', 'en-GB'),
			$this->isTrue(),
			'Language is not a changable property'
		);
	}

	/**
	 * Test the getListQuery method.
	 *
	 * @return  void
	 *
	 * @since   2.5
	 */
	public function testGetListQuery()
	{
		$this->assertInstanceOf(
			'JDatabaseQuery',
			$this->inspector->getListQuery(null),
			'The list query is an instance of JDatabaseQuery'
		);
	}

	/**
	 * Test the getURL method.
	 *
	 * @return  void
	 *
	 * @since   2.5
	 */
	public function testGetURL()
	{
		$this->assertThat(
			$this->inspector->getURL('1', 'com_content', 'article'),
			$this->StringContains('index.php?option=com_content&view=article&id=1'),
			'The link to com_content ID 1'
		);
	}

	/**
	 * @todo Implement testOnStartIndex().
	 */
	public function testOnStartIndex()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @todo Implement testOnStartUpdate().
	 */
	public function testOnStartUpdate()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @todo Implement testOnBeforeIndex().
	 */
	public function testOnBeforeIndex()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @todo Implement testOnBuildIndex().
	 */
	public function testOnBuildIndex()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}

	/**
	 * @todo Implement testOnBuildUpdate().
	 */
	public function testOnBuildUpdate()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete('This test has not been implemented yet.');
	}
}
